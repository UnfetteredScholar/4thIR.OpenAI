<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContinueOnError_Description" xml:space="preserve">
    <value>If set, continue executing the remaining activities even if the current activity has failed.</value>
    <comment>property description</comment>
  </data>
  <data name="ContinueOnError_DisplayName" xml:space="preserve">
    <value>ContinueOnError</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Description" xml:space="preserve">
    <value>Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute).</value>
    <comment>property description</comment>
  </data>
  <data name="Timeout_DisplayName" xml:space="preserve">
    <value>Timeout (milliseconds)</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Error" xml:space="preserve">
    <value>The activity timed out and was canceled.</value>
    <comment>error message</comment>
  </data>
  <data name="Do" xml:space="preserve">
    <value>Do</value>
    <comment>generic</comment>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Common</value>
    <comment>category</comment>
  </data>
  <data name="Authentication_Category" xml:space="preserve">
    <value>Authentication</value>
    <comment>category</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="ValidationScope_Error" xml:space="preserve">
    <value>Cannot be used outside of a {0}.</value>
    <comment>error message; {0} is a container activity (e.g. a scope)</comment>
  </data>
  <data name="ValidationValue_Error" xml:space="preserve">
    <value>Please provide a value for {0}.</value>
    <comment>error message; {0} is the name of a missing property</comment>
  </data>
  <data name="ValidationExclusiveProperties_Error" xml:space="preserve">
    <value>Please provide a value either for {0} or {1}, but not both.</value>
    <comment>error message; {0} &amp; {1} are mutually exclusive activities</comment>
  </data>
  <data name="ValidationOverloadGroup_Error" xml:space="preserve">
    <value>Please provide values for both {0} and {1}.</value>
    <comment>error message; {0} &amp; {1} are complementary properties</comment>
  </data>
  <data name="GenerateCompletion_DisplayName" xml:space="preserve">
    <value>Generate Completion</value>
    <comment>activity name</comment>
  </data>
  <data name="GenerateCompletion_Description" xml:space="preserve">
    <value>Generates completions based on the prompt(s) provided. Supports: summarization, translation, grammar correction, question answering, chatbots, composing emails, etc.</value>
    <comment>activity description</comment>
  </data>
  <data name="GenerateCompletion_Prompts_DisplayName" xml:space="preserve">
    <value>Prompts</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Prompts_Description" xml:space="preserve">
    <value>The prompts to be processed.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_Model_DisplayName" xml:space="preserve">
    <value>Model</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Model_Description" xml:space="preserve">
    <value>The model used to generate the completion.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_Temperature_DisplayName" xml:space="preserve">
    <value>Temperature</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Temperature_Description" xml:space="preserve">
    <value>Controls randomness. Lowering results in less random completions as the value approaches 0.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_MaximumLength_DisplayName" xml:space="preserve">
    <value>Maximum Length</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_MaximumLength_Description" xml:space="preserve">
    <value>The maximum number of tokens to generate.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_StopSequences_DisplayName" xml:space="preserve">
    <value>Stop Sequences</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_StopSequences_Description" xml:space="preserve">
    <value>The stop sequence where the API will stop generating further tokens. The returned text will not contain the stop sequence.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_TopP_DisplayName" xml:space="preserve">
    <value>Top P</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_TopP_Description" xml:space="preserve">
    <value>Controls diversity via nucleus sampling.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_FrequencyPenalty_DisplayName" xml:space="preserve">
    <value>Frequency Penalty</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_FrequencyPenalty_Description" xml:space="preserve">
    <value>The scale of the penalty for how often a token is used.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_PresencePenalty_DisplayName" xml:space="preserve">
    <value>Presence Penalty</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_PresencePenalty_Description" xml:space="preserve">
    <value>The scale of the penalty applied if a token is already present at all. </value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_NumberOfOutputs_DisplayName" xml:space="preserve">
    <value>Number of Outputs</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_NumberOfOutputs_Description" xml:space="preserve">
    <value>How many different choices to request for each prompt.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_LogProbabilities_DisplayName" xml:space="preserve">
    <value>Log Probabilities</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_LogProbabilities_Description" xml:space="preserve">
    <value>Include the log probabilities on the most likely tokens.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_Echo_DisplayName" xml:space="preserve">
    <value>Echo</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Echo_Description" xml:space="preserve">
    <value>Echo back the prompt in addition to the completion.</value>
    <comment>property description</comment>
  </data>
  <data name="GenerateCompletion_CompletionResult_DisplayName" xml:space="preserve">
    <value>Completion Result</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_CompletionResult_Description" xml:space="preserve">
    <value>The resulting completion.</value>
    <comment>property description</comment>
  </data>
  <data name="Authentication_Category" xml:space="preserve">
    <value>Authentication</value>
    <comment>category</comment>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Common</value>
    <comment>category</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="ValidationScope_Error" xml:space="preserve">
    <value>Cannot be used outside of a {0}.</value>
    <comment>error message; {0} is a container activity (e.g. a scope)</comment>
  </data>
  <data name="ValidationValue_Error" xml:space="preserve">
    <value>Please provide a value for {0}.</value>
    <comment>error message; {0} is the name of a missing property</comment>
  </data>
  <data name="ValidationExclusiveProperties_Error" xml:space="preserve">
    <value>Please provide a value either for {0} or {1}, but not both.</value>
    <comment>error message; {0} &amp; {1} are mutually exclusive activities</comment>
  </data>
  <data name="ValidationOverloadGroup_Error" xml:space="preserve">
    <value>Please provide values for both {0} and {1}.</value>
    <comment>error message; {0} &amp; {1} are complementary properties</comment>
  </data>
  <data name="GenerateCompletion_DisplayName" xml:space="preserve">
    <value>Generate Completion</value>
    <comment>activity name</comment>
  </data>
  <data name="GenerateCompletion_Description" xml:space="preserve">
    <value>Generates completions based on the prompt(s) provided. Supports: summarization, translation, grammar correction, question answering, chatbots, composing emails, etc.</value>
    <comment>activity description</comment>
  </data>
  <data name="GenerateCompletion_APIKey_DisplayName" xml:space="preserve">
    <value>API Key</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_APIKey_Description" xml:space="preserve">
    <value>The API Key.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_Prompts_DisplayName" xml:space="preserve">
    <value>Prompts</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Prompts_Description" xml:space="preserve">
    <value>The prompts to be processed.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_Model_DisplayName" xml:space="preserve">
    <value>Model</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Model_Description" xml:space="preserve">
    <value>The model used to generate the completion.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_Temperature_DisplayName" xml:space="preserve">
    <value>Temperature</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Temperature_Description" xml:space="preserve">
    <value>Controls randomness. Lowering results in less random completions as the value approaches 0. (0-1)</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_MaximumTokens_DisplayName" xml:space="preserve">
    <value>Maximum Tokens</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_MaximumTokens_Description" xml:space="preserve">
    <value>The maximum number of tokens to generate.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_StopSequences_DisplayName" xml:space="preserve">
    <value>Stop Sequences</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_StopSequences_Description" xml:space="preserve">
    <value>The stop sequence where the API will stop generating further tokens. The returned text will not contain the stop sequence.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_TopP_DisplayName" xml:space="preserve">
    <value>Top P</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_TopP_Description" xml:space="preserve">
    <value>Controls diversity via nucleus sampling.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_FrequencyPenalty_DisplayName" xml:space="preserve">
    <value>Frequency Penalty</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_FrequencyPenalty_Description" xml:space="preserve">
    <value>The scale of the penalty for how often a token is used.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_PresencePenalty_DisplayName" xml:space="preserve">
    <value>Presence Penalty</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_PresencePenalty_Description" xml:space="preserve">
    <value>The scale of the penalty applied if a token is already present at all.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_NumberOfOutputs_DisplayName" xml:space="preserve">
    <value>Number of Outputs</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_NumberOfOutputs_Description" xml:space="preserve">
    <value>How many different choices to request for each prompt.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_LogProbabilities_DisplayName" xml:space="preserve">
    <value>Log Probabilities</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_LogProbabilities_Description" xml:space="preserve">
    <value>Include the log probabilities on the most likely tokens.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_Echo_DisplayName" xml:space="preserve">
    <value>Echo</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_Echo_Description" xml:space="preserve">
    <value>Echo back the prompt in addition to the completion.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="GenerateCompletion_CompletionResult_DisplayName" xml:space="preserve">
    <value>Completion Result</value>
    <comment>property name</comment>
  </data>
  <data name="GenerateCompletion_CompletionResult_Description" xml:space="preserve">
    <value>The resulting completion.</value>
    <comment>property description</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
</root>